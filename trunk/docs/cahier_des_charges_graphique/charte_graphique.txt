I PRESENTAION DU PRESENT DOCUMENT 

	
	1.1 GENERALITES SUR L’ERGONOMIE 

Ce document a pour objectif de définir les spécifications graphiques de l'application eMagine. 
Notre logiciel pour être ergonomique, doit répondre à deux critères fondamentaux qui sont l'utilité et l'utilisabilité.

*L’Utilité
Ce critère concerne l’adéquation entre les fonctions offertes par l’application informatique et celles
nécessaires à l’utilisateur pour réaliser les tâches qui lui sont affectées.
Une application informatique est donc utile si elle permet aux utilisateurs de mener à bien les tâches qui
leur sont assignées.
Ce critère a été exprimé dans le cahier des charges fonctionnelles en étayant les engagements de l'équipe. 

*L’Utilisabilité (ou maniabilité)
Ce critère est relatif à la facilité d’utilisation d’une application informatique.
Une application informatique est utilisable… si elle est facile à utiliser ! autrement dit si elle permet aux
utilisateurs de mener facilement à bien les tâches qu’ils doivent réaliser. 


Il existe deux aspects à l'ergonomie que nous décrirons ci-dessous : 
L’Ergonomie « profonde » :L’ergonomie « profonde » associe les deux critères d’utilisabilité et d’utilité au niveau de l’interface
utilisateur, à savoir :
• le contenu des fonctionnalités nécessaires au travail des utilisateurs et l’organisation de ces
fonctionnalités dans la structure de l’application (organisation en modules, menus,…) ;
• la logique d’utilisation de ces fonctionnalités à travers l’application (enchaînements des écrans
selon la succession des tâches et sous-tâches que les utilisateurs ont à réaliser dans leur travail) ;
• le contenu du système d’aide (en ligne et papier) ainsi que des éventuels supports de formation
nécessaires à un apprentissage efficace des utilisateurs.

L’Ergonomie « de surface » (appelée aussi parfois le « cosmétique ») :
Peu dépendant du contexte d’utilisation de l’application, autrement dit de l’environnement de travail des
utilisateurs, ce niveau s’arrête en fait au critère d’utilisabilité de l’interface utilisateur, à savoir :
• la navigation,
• la structuration des éléments dans les fenêtres/pages (disposition de ces éléments, densité
d’affichage,…),
• les aspects graphiques (couleurs, objets graphiques tels que boutons, logos, etc.) et la typographie,
• les réactions du système (comportement des boutons, des liens, retours système,…).

Ce document s'attachera à définir d'une part l'ergonomie de surface en exposant la charte graphique de l'application eMagine. Ensuite, la seconde partie exposera l'aspect d'ergonomie profonde en décrivant le zonning de l'application. 

Remarque : La finalité d’un logiciel est de servir à quelqu’un pour faire quelque chose. Dire qu’un logiciel est « ergonomique » ne veut rien dire en soi, en effet un logiciel est ergonomique pour une personne donnée ayant un objectif donné. L'étude de la cible de l'application apparaît donc indispensable... 

	1.2 NOTE SUR LES SPECIFICATIONS GRAPHIQUES D’EMAGINE 


II. RECOMMANDATIONS SUR LA NAVIGATION
 
	2.1 Le système de navigation 

L’arborescence d’une application peut être composée de 1 à n niveaux, la page d’accueil étant le « niveau 0 »
(la page de connexion lorsqu’il y en a une n’est pas « comptabilisée » comme niveau). C’est sur la page
d’accueil que sont énoncés les différents modules (= grandes fonctionnalités) proposés à l’utilisateur.
Chaque module (niveau 1) peut contenir 1 à n pages et peut être constitué de 1 à n sous-modules ou fonctions (niveau 2), lesquels peuvent contenir 1 à n pages et être eux-mêmes constitués de 1 à n fonctions
plus fines (niveau 3), etc.
Au sein d’une application, la navigation peut ainsi être :
• Verticale : changement de niveau à l’intérieur de l’arborescence, autrement dit on « monte » ou on « descend ».
• Horizontale : changement de page à l’intérieur d’un même niveau de l’arborescence.


D'abord, le système de navigation sera autonome, c'est-à-dire qu'il ne dépendra pas des boutons <Page suivante> et <Page précédente> du navigateur.
En effet, ces boutons ne fonctionnent pas toujours de la même façon selon les navigateurs (ce n’est pas
systématiquement la page précédente qui s’affiche lorsqu’on active la fonction correspondante). Les liens proposés suffiront à la navigation. 
Ainsi par exemple, si la page précédemment consultée par l’utilisateur était une liste, la page courante doit contenir un lien « Retour à la liste ». 

 
	2.2 La barre de navigation

Par ailleurs, une barre de navigation doit être présente et identique sur toutes les pages, qui permettra à l’utilisateur de se déplacer entre les modules de l’application.
Il s'agira d'un bandeau vertical gauche car il permet car il nous paraît plus adapté. 
Les sous-modules/fonctions si la navigation principale est sous forme de bandeau vertical gauche, alors les sousmodules/
fonctions pourront apparaître en affichage dynamique, que l'on rendra visible au passage du pointeur sur le module/fonction auquel ils sont rattachés.
La navigation de troisième niveau sera matérialisée par des onglets.Le bandeau ne sera pas visible à partir des pages de niveaux trois afin de ne pas surcharger les pages.
En plus des liens situés dans le corps même de ces pages (Exemple : « Retour à la liste des apprentis »), le chemin de navigation
permettra de revenir/remonter aux niveaux supérieurs.

Dans la barre de navigation, l’élément actif (lien qui correspond à la rubrique ou à la page
courante) doit être mis en évidence visuellement. 
--> écrire notre choix.

Nous Utiliserons un chemin de navigation afin de guider l'utilisateur dans son parcours. 
Le chemin permet ainsi à l’utilisateur de se repérer dans l’arborescence de l’application et
d’y naviguer rapidement. On énoncera le chemin le plus court, théorique. 
Pour ce faire on utilisera le nom du noeud parcouru en partant de la page racine jusqu'à la page courante séparées par le signe ">".
Par exemple, accueil > gestion apprenti> liste des apprentis > détail apprenti > absences
Le dernier élément n'est pas cliquable car il correspond à la page courante. 

Remarque : Chaque page de l’application doit proposer au minimum un lien sans quoi il s’agirait d’une page « en
impasse » (obligeant l’utilisateur à recourir à la fonction « Précédent » du navigateur).



	2.3 Les liens de l'application 

--> y aura-t-il des cas de liens textuels dans l'appli ?????? que des boutons devraient suffire...
Un lien doit être clairement reconnaissable. Pour cela, on utilisera une nuance de couleur de l'application. 
De plus, le pointeur de la souris doit prendre la forme d’une petite main.
Un lien peut apparaître sur du texte ou une image. Les éléments non cliquables ne seront jamais soulignés.
Pour mettre des mots en relief nous utiliserons du gras.
Les liens cliqués ne changeront pas de couleur, car dans notre application cela n'a aucun intérêt pour notre utilisateur de mémoriser son parcours (ce n'est pas un site de consultation mais une application).

Nous veillerons à ce que l’interlignage soit suffisamment important pour que le pointeur de la souris, sous forme de « main », ne désigne pas deux liens en même temps. 

7. Les liens inactifs doivent être plus « discrets » que les liens actifs.
Exemple : le lien correspondant à la page que l’on est en train de visualiser étant inactif, il doit être identifié différemment des autres liens (non souligné et/ou en grisé, par exemple).
--> trouver la solution !


Si les listes sont grandes pour les recherches, par exemple, liste des entreprises sans critères de recherche. 
Il risque d'y avoir un grand nombre de résultats, ainsi, nous choisirons de faire figurer les pages de navigation en bas de page sous la forme suivante :
Pages << 3 4 5 6 7 8 >>
Les << et >> permettent respectivement d’afficher la page précédente et la page suivante (par rapport à la page courante). 
Ces informations apparaîtront sous forme d'info-bulle. La page courante sera affichée en gras (non soulignée).  

En outre, pour les pages de longueur importante (par exemple "saisie d'un candidat"), nous utiliserons un signet (une petite flèche, pointe vers le haut) permettant de revenir en haut de la page (au niveau du sommaire de la page).

Toutes les actions du type ajouter, modifier, supprimer, etc ne seront pas des liens textuels mais des boutons.


II. LA PRÉSENTATION GENERALE DES PAGES 


	2.1 LA TAILLE DES PAGES

Les pages s’afficheront par défaut en 800x600; elles pourront éventuellement être redimensionnées par l’utilisateur.
(en fonction de ses habitudes de travail, de la taille de son écran).
De plus, les pages seront toutes "étirables" (exception faite des fenêtres pop-up). 
L'utilisateur pourra donc effectuer cette action afin de gagner en lisibilité en ayant une meilleure vue d'ensemble.

	2.1 L’HOMOGÉNÉITÉ (zoning ?)

Il s'agit de garder une homogénéité dans la présentation des pages de l’application.

*caractéristiques des titres de page, 
*des liens, 
*des barres de navigation, 
*disposition des éléments… 

*les formulaires (liste de champs à saisir): 
	Ceux ci seront contenus dans des cadres. 
	Les champs dates seront accompagnés d'un bouton à droite du champ dirigeant vers un calendrier. 
	Les champs de codes seront accompagnés d'un bouton à droite du champ dirigeant vers une liste de codes. 
	Les champs obligatoires seront marqués d'une étoile rouge, à la droite du champ.
	Les champs de saisie seront alignés afin de favoriser l'esthétique.  


	2.3 LES CADRES (OU FRAMES)

L'application utilisera des cadres avec une bordure discrète bleu et un titre en haut a gauche, au même niveau que la bordure. 
Ces cadres auront pour but de regrouper les données par thème afin de favoriser la lisibilité. 

Remarque : Pour l'impression, il peut être utile d’offrir aux utilisateurs une version imprimable des données : sans
les éventuels cadres ou autres éléments de navigation mais en y ajoutant des éléments plus
pertinents tels qu'un référencement à eMAgine et la date d’impression.


	2.4 LA DISPOSITION DES ÉLÉMENTS/INFORMATIONS DANS LA PAGE

Concernant le menu, il devra occuper une surface minimale. Pour que les utilisateurs puissent trouver facilement les informations qu'ils recherchent.
Par conséquent, les outils de navigation ainsi que les informations critiques se situeront en haut de page ôur faciliter cette recherche.


Des lignes horizontales de séparation (appelées « filets ») peuvent être utilisées pour séparer différentes parties d’un
formulaire.

	2.5 LES LISTES ET TABLEAUX

Les listes s'affichent grâce à des tableaux. 

Les en-têtes de colonne doivent être centrées par rapport à la largeur de la colonne.
Le contenu des colonnes doit être cadré à gauche s’il s’agit de texte et à droite s’il s’agit de valeurs
numériques. Les colonnes correspondront aux caractèristiques les plus significatives de la liste d'éléments recherchés. 

Afin de faciliter la lisibilité des lignes des tableaux nous utiliserons 2 couleurs, en les
alternant : la première ligne en bleu clair, la deuxième ligne en blanc, la troisième en
bleu clair, la quatrième en blanc, etc.

La ligne d’un tableau peut être sélectionnée par clic sur la ligne.
Ainsi, la ligne sur laquelle passe le pointeur est colorée afin d’être mise en évidence. L’utilisateur n’a plus qu’à
cliquer sur la ligne de son choix. 

La sélection pour effectuer une action sur une des lignes du tableau se fera par bouton d’option. C'est-à-dire, un bouton ou plusieurs en face de chaque ligne du tableau. Par exemple, pour la suppression.

La multi-sélection n’est pas autorisée (une seule ligne sélectionnable à la fois).


Exception :
Pour la gestion du passage des apprentis par exemple, la multiselection sera autorisée. 
Une case à cocher tout à gauche de chaque ligne (à l’état « coché » si la ligne est sélectionnée) sera présente. Au dessus du tableau, à gauche (à l’aplomb de la colonne des cases à cocher), une case à cocher « Tout sélectionner/tout désélectionner » sera proposée.


Les lignes seront des lignes simples pour ne pas charger la page, c'est-à-dire que les lignes ne pourront pas être développées en «sous-lignes» ou lignes filles. 
Si les informations détaillées relatives à chaque ligne d’un tableau sont peu nombreuses, alors l’affichage de ces informations peut se faire en dessous du tableau dans un cadre réservé à cet effet.

--> cela peut il etre util ???
afficher les info d'une ligne dans un cadre réservé à cette effet. évite de cliquer pour avoir le détail... 
pas mal mais je crois qu'on a trop d'info a chaque fois en ce qui nous concerne...
Il s’agit de cas où pour chaque ligne du tableau existe un nombre limité d’informations détaillées ;
Ces dernières peuvent être affichées en dessous du tableau, dans un espace réservé à cet effet
(dans la même page que le tableau donc). 
Tant que l’utilisateur n’a pas cliqué sur une ligne donnée, ce sont les informations relatives à la première ligne du tableau qui s’affichent par défaut.


Si les informations détaillées relatives à chaque ligne d’un tableau sont nombreuses, alors l’affichage de ces informations se fera dans une page spécifique (page « Détails »). Sur chacune de ces pages, il y aura alors un lien « retour à la liste des n ». 
Cette page s’active lorsque l’utilisateur active le lien de cette ligne. Chaque ligne doit donc comporter un lien, lequel doit correspondre à l’information la plus « significative » (colonne) pour l’utilisateur (significative par rapport à ses habitudes de travail), par exemple, le code identifiant, le libellé, la date. 
Notons qu’aucune page « Détails » ne doit s’afficher par défaut tant que l’utilisateur n’a pas cliqué sur le lien d’une ligne.
La page détail doit avoir pour titre : « Détail de l’élément n » ainsi qu’un lien  « Retour à la liste des n » permettant de revenir sur la page dans laquelle se trouve le tableau. 

On affichera en règle générale cette page dans la fenêtre courante du navigateur, mais il pourra dans certains cas s’avérer judicieux de faire apparaître cette page détail dans une fenêtre pop-up.
--> faire un choix.

Pour les tableaux en modification ou création : 
Les lignes du tableau se présentent sous forme de champs de saisie (par colonne), mais cela n’est possible que si toutes les informations se trouvent dans le tableau. Si l’utilisateur veut insérer une ligne, il cliquera sur le bouton « insérer une ligne » en bas à droite de la dernière ligne de la liste. Sinon, l’utilisateur doit utiliser la page de détail d’un élément.

L’utilisateur n’aura pas la possibilité de modifier l’ordre de présentation des lignes du tableau.

--> est-ce utile ? je pense que c’est un bonne solution, est-ce possible facilement avec struts?
Pour le basculement ???
Il peut dans certains cas être judicieux de donner à l’utilisateur la possibilité de faire circuler les éléments d’un tableau vers un autre tableau.
Ces deux tableaux seront positionnés en vis à vis sur une même ligne horizontale (dans la même page) afin de permettre à l’utilisateur d’enlever un élément d’un tableau pour le mettre dans l’autre tableau. 
Cette possibilité sera généralement matérialisée par deux flèches horizontales
(une vers la gauche et une vers la droite).


Pour les listes trop longue, un ascenseur vertical à droite des tableaux doit apparaître.
Taille maximum des tableaux en largeur : ??
Ceci permet d’éviter de mettre un ascenseur horizontal sur le tableau ce qui nuit à la visibilité. Pour éviter que le tableau ne dépasse cette taille, nous fournirons à l’utilisateur que les informations dont il a réellement besoin (pas de colonnes « superflues »). Si le nombre d’information est trop importante, « l’étirabilité » de la fenêtre remplacera l’ascenseur.

	2.6 LES ASPECTS TYPOGRAPHIQUES

Nous éviterons le style italique car il est difficilement lisible.
Le soulignement sera exclusivement réservé aux liens textuels. 
Ecrire tous les éléments textuels en minuscules avec une majuscule à l’initiale (1ere lettre en majuscule + minuscules).
Les textes écrits en majuscule seront utilisés uniquement pour les titres. 

Ainsi par exemple :
« Annuler », « Nom », « Téléphone », « Coordonnées », « N° de téléphone », « Adresse postale », « Résultats de votre recherche »,…
4. Les formats de police doivent être spécifiés.
*Titre de page (Arial, gras, 16 pts, couleur à déterminer).
*Chemin de navigation (Arial, 11 pts, couleur à déterminer).
*Libellé de rubrique (Arial, gras, 14 pts, couleur à déterminer).
*Intitulés de champs de formulaire (Arial, gras, 12 pts, noir).
*Contenu de champs de formulaire (Arial ou autre, normal, 12 pts, noir).
*Commentaires de champs de formulaire ou autres commentaires (Arial, normal, 11 pts, noir ou gris) ; il s’agit par exemple du format attendu pour un champ de saisie de type Date.
*Libellé des boutons

La taille des polices est proportionnelle au niveau de hiérarchie de l’information.
Ainsi, la taille des caractères d’un titre de page devra être supérieure à celle d’un libellé de rubrique.
Nous éviterons d’utiliser plus de quatre polices de caractères différentes dans une même page car un trop grand nombre de police nuit à la lisibilité de la page. 

Ne pas justifier le texte afin de garder des espaces égaux entre les mots. 
Note : cette recommandation est surtout applicable aux pages contenant beaucoup de texte (pages d’aide, mode d’emploi, informations réglementaires, etc.).
L’espace entre les caractères est d’au moins un pixel.

Les dates seront affichées au format JJ/MM/AAAA.


g) LES COULEURS


Nous utiliserons un fond blanc afin de préserver la sobriété de l’application.
La couleur choisie est volontairement discrète pour ne pas occulter les informations contenues sur la page. 


L’application utilisera quatre couleur ou éventuellement leurs dégradés :
Ce sont celles apparaissant dans le logo de eMagine. 
Les couleurs resteront donc en harmonie sur la page.
*Le rouge pour les information à mettre en relief car il s’agit d’une couleur dynamisante.
*Le blanc pour la clarté et la sobriété des fonds de pages.
*Le bleu, le blanc, et le noir pour les bannières et les images. 
*Le bleu (informations courantes), le noir (informations mineures) et le rouge (informations majeures) pour les textes.
Les autres couleurs n’apparaitront que sur les boutons, ou dans les boîte de dialogue pour les messages d’erreurs, etc.

[Nous utiliserons 4 couleurs : Celles de notre logo afin de conserver l'harmonie des couleurs. 
d'autre part il faut savoir que les couleurs possèdent une symbolique forte : 
*Un fond blanc qui favorise la clarté et la sobriété. 
*Le bleu inspire le calme et la douceur.
*le rouge (bordeau) sera utilisé pour dynamiser les pages. Il fera ressortir les points inmportants du site.
*le noir qui représente le passif, sera utilisé essentiellemnt pour faire ressortir les autres couleurs ou pour les écritures.]

h) LES PICTOGRAMMES

La couleur et les symboles de boutons :
*Le vert pour les boutons de validation doublée d’un symbole « check ».
*Le rouge pour les boutons de suppression doublée d’un symbole « poubelle » 
*Le jaune pour les boutons de modification ??
*Un symbole « feuille blanche » pour la création  
*une symbole « point d’exclamation » dans un sigle « attention » pour les messages d’erreurs 
*Une étoile pour les champs obligatoires d’un formulaire 
Ces symboles seront doublés d’une info-bulle pour expliquer leur signification (attention car ces info-bulles sont conditionnées par les navigateur. En effet, elles ne sont pas gérées par mozilla firefox). 
  

III LE CONTENU

3.1 LA GESTION DES DROITS

Seules les fonctionnalités autorisées pour un profil utilisateur donné doivent être affichées. Les autres ne doivent pas l’être.
Dans notre cas, les utilisateurs se retrouvent dans la position où ils ont tous les droits puisqu’ils ont la possibilité de faire des « demandes de modifications. Ainsi les icônes seront les mêmes mais les traitements seront différents.
  
b) ASPECTS « QUALITATIFS »

*Un titre de page ne peut pas être un lien.
*Le titre des pages précise le mode dans lequel on se trouve : consultation, création, modification…

c) LE VOCABULAIRE

*Utiliser le vocabulaire appartenant au domaine d’activité des utilisateurs.
(cf. glossaire de l’application eMagine)
*Utiliser des termes explicites et non ambigus et des formes affirmatives.

*Nous éviterons au maximum d’utiliser des abréviations mais .

	*Une abréviation qui ne se compose que des premières lettres de son mot se termine par un point. Exemple : référence = réf.
	*Une abréviation qui se termine par la dernière lettre de son mot ne comporte pas ce point final. Exemple : boulevard = bd
	* L’abréviation des groupes de mots ne comporte pas de point final non 	plus. Exemple : s’il vous plaît = SVP ou svp
	* Liste des abréviations utilisées dans l’application eMagine :
		« colonne » : « col. » ;
		« département » : « dép. » ;
		« document » : « doc. » ;
		« établissements » : « Ets» ;
		« exemple » : « ex. » ;
		« inférieur » : « inf. » ;
		« introduction » : « intro.» ;
		« invariable » : « invar. » ;
		« juridique » : « jur. » ;
		« lignes » : « l. » ;
		« monsieur » ou « messieurs » : « M. »;
		« numéro » ou « numéro » : « no», « nos » ;
       « nouveau/nouvelle » : « nouv. » ;
       « page(s) » : « p.» ;
 		« suivant(e) (s)» : « suiv. » ;
       « supérieur » : « sup. » ;
       « supplément » : « suppl. » ;
		« heure » : « h » ;
		« minute » : « min » ;


d) LES BOUTONS

* L’action de supprimer apparaîtra sous la forme d’un bouton <Supprimer> et non pas d’un lien « Supprimer ».

* Nous utiliserons des verbes à l’infinitif. 
* Homogénéité : au sein de l’application, toujours utiliser le même libellé pour désigner la même action.

Certains boutons pourront être momentanément inaccessibles tant qu’une action préalable n’a pas été effectuée. Le caractère inactif d’un bouton sera grisé.
//Exemple : un bouton <Ajouter> restera inactif tant qu’aucun élément n’a été //sélectionné… pour pouvoir être ajouté.

//A noter que certains boutons pourront être en permanence inaccessibles à //certains utilisateurs du fait de leur profil (droits d’accès/d’utilisation). //Ces boutons ne devront pas du tout apparaître à l’écran, même en grisé.

*La touche « Entrée » du clavier sera active.
Cette touche est équivalente au bouton par défaut d’un formulaire, le bouton défini par défaut étant celui qui présente la plus grande probabilité d’être choisi par l’utilisateur. Dans le cas où le bouton ayant la plus grande probabilité d’être choisi par l’utilisateur est difficile à définir (cas des pages comprenant plusieurs boutons) ; aucun bouton par défaut ne sera défini.

e) ASPECTS « QUANTITATIFS »

*En règle générale, la page d’accueil devrait contenir sur un seul écran.
La page d’accueil doit indiquer la finalité de l’application ; si l’ensemble du contenu de la page d’accueil ne peut être appréhendé d’emblée, la compréhension de l’application s’en trouvera immédiatement affectée.

*En règle générale, le contenu proprement dit d’une page – autrement dit les informations autres que le système de navigation – représenteront environ 70% de l’espace disponible.
*Les ascenseurs verticaux disparaissent automatiquement lorsqu’ils ne sont pas utiles.
*Ne pas faire apparaître plusieurs lignes blanches au bas de la page, ayant pour conséquence de faire apparaître un ascenseur vertical alors qu’il n’y en a pas réellement besoin (attention aux calques invisibles).
//Lorsque la page se compose de plusieurs rubriques et dépasse la longueur d’un //écran, proposer un « sommaire » propre à la page. -->système d’ancres..

IV LA DECONNEXION

*Pour quitter l’application nous proposerons un lien « Déconnexion ». Il sera situé en haut à droite de la page. Il entraîne la fermeture de la
page courante et affiche la page de connexion.
La fonction « Se déconnecter » permet alors à l’utilisateur de « dire au serveur » qu’il a « fini de travailler avec l’application » ; cette fonction lui permet donc de prendre l’initiative de la déconnexion et de laisser la main aux autres utilisateurs de l’application.
Cette méthode sera doublé un Time Out en place. Ce système permet une déconnexion automatique (donc à l’initiative du système et non de l’utilisateur) dès qu’un certain laps de temps s’est écoulé sans que
l’application ait été utilisée.
Ainsi par exemple, si le délai programmé pour que le Time-Out se déclenche est de deux heures,
l’application cessera de fonctionner si l’utilisateur ne s’en est pas servi depuis ce laps de temps.
Avant de déconnecter l’utilisateur, faire apparaître (2 ou 3 minutes avant) un message afin de le
prévenir, message du type :
« Déconnexion dans x minutes. Pour ne pas être déconnecté, changez d’écran.
Message envoyé à # telle heure # ».
Une fois la déconnexion effective (donc si l’utilisateur n’a pas réagi suite au premier message), faire
apparaître un autre message l’informant : « Connexion expirée ».
A noter que la fonction de Déconnexion et le Time-Out peuvent tout à fait coexister sur une même
application, au contraire !
II.1.5 L’IMPRESSION
1. Pour les données affichées à l’écran qui peuvent être imprimées, distinguer l’action « imprimer »
de la version à imprimer.
• L’action « Imprimer » (la plupart du temps un bouton avec pour libellé <Imprimer> ou un picto
imprimante) imprime la page courante (celle que l’on a sous les yeux à l’écran) telle quelle, c’està-
dire avec le graphisme mais pas nécessairement avec une mise en page correcte (d’où des
parties de la page parfois tronquées à l’impression).
• La version à imprimer est une version épurée de la page courante (présentation des données
sans leur habillage graphique et avec une mise en page correcte). Cette version, à laquelle on
accède via un lien « Version à imprimer » ou « Version imprimable » s’affiche dans une nouvelle
fenêtre du navigateur. Une fois la version imprimable affichée, deux solutions pour l’impression
(lancement de l’impression) :
o soit l’impression se fait depuis la fonction <Imprimer> du navigateur.
o soit elle se fait depuis une fonction propre à l’application via un bouton <Imprimer>
placé dans la page (en bas et éventuellement en haut de la page, plutôt à droite) ; dans
cette solution, l’utilisateur n’a pas besoin « d’aller chercher » avec le pointeur la fonction
d’impression du navigateur, mais le bouton <Imprimer> apparaît sur la version papier du
document imprimé, ce qui n’est pas forcément souhaitable (tout dépend de la nature du
document à imprimer : document officiel ou non).
2. La date d’impression doit systématiquement être présente sur la version imprimable.
Cette recommandation s’applique surtout lorsque la version imprimable concerne des données
(tableau de résultats suite à une recherche, infos détaillées relatives à un élément, etc.). Elle n’est pas
obligatoire lorsque la version imprimable est un document lui-même daté et/ou comprenant un
numéro de version (comme par exemple un mode d’emploi au format .pdf).
II.2 RECOMMANDATIONS SPÉCIFIQUES A CHAQUE TYPE DE PAGE
II.2.1 LA PAGE D’IDENTIFICATION
1. La fonction d’une page d’identification, ou page d’authentification ou encore de connexion, est de
vérifier « l’authenticité »/l’identité de l’utilisateur qui se connecte afin :
• de lui autoriser ou non d’accéder à l’application,
74 – RECOMMANDATIONS ERGONOMIQUES APPLICATIONS WEB OU APPLICATIONS « EN LIGNE »
• de lui proposer (si bien sûr il est autorisé à se connecter) les fonctions auxquelles son profil lui
donne droit.
2. La page d’identification devra plutôt apparaître en règle générale dans une fenêtre pop-up (non
redimensionnable).
3. Le contenu de la page d’identification sera le suivant :
• le logo CNRS
Ce logo sera positionné en haut à gauche de la page et sera cliquable.
• le nom de l’application (précédé d’un pictogramme symbolisant l’accès restreint) ainsi que son
numéro de version
Le nom de l’application sera écrit en haut de la page (centré ou à droite) ; le numéro de version
suivra le nom de l’application ou sera écrit en dessous de ce dernier.
• zone de saisie des codes d’accès
Cette zone sera positionnée au centre de la page ou à droite de celle-ci, selon que la page contient
ou non d’autres informations (telle que la configuration requise). Si elle est positionnée dans la
partie droite de la page (afin de réserver la partie gauche à d’autres informations), la séparer de la
partie gauche par un filet vertical (trait non épais afin éviter toute « lourdeur » visuelle). Elle
contiendra :
o en invite, la phrase : « Veuillez vous identifier ».
o au dessous, le couple identifiant ; le couple identifiant le plus souvent utilisé est « Code
utilisateur » / « Mot de passe » (pour des raisons de sécurité, le mot de passe devra être crypté),
mais si un troisième champ est nécessaire, il s’agit en général du « Code entité » ;
o le bouton de validation : on préfèrera <Valider> au bouton <OK>, bien que ce dernier soit tout à
fait acceptable. Le bouton de validation sera de préférence positionné au dessous des champs,
centré ; mais il pourra être aussi éventuellement placé à droite du champ « mot de passe », sur
la même ligne horizontale.
Si l’accès à l’application ne passe pas nécessairement par l’utilisation d’identifiants mais peut se
faire par d’autres moyens, se référer à la recommandation suivante (n°4) de ce même paragraphe.
• s’il y a lieu des précisions quant à la configuration requise
La zone de saisie des codes d’accès prend généralement très peu de place. Il est possible, en
séparant la page en deux dans le sens de la hauteur, de profiter si nécessaire de la partie gauche
pour indiquer la configuration requise pour utiliser l’application : navigateur(s) recommandé(s),
version(s), etc. Lorsqu’une application exige une configuration minimale du poste client, un test
doit être effectué en début de session de travail afin de prévenir l’utilisateur si sa configuration est
insuffisante.
A noter que s’il ne s’agit pas d’une application à accès restreint, autrement dit s’il n’y a pas de page
d’identification, ces précisions devront figurer sur la page d’accueil.
• un lien vers le formulaire de demande d’assistance (interfaçage avec l’application Web
Assistance) – voir figures 44 et 45 .
Ce lien, ayant pour libellé « Demande d’assistance » conduira selon les cas :
• soit sur la page de formulaire « Nouvelle question » de l’application Web Assistance (page
permettant à l’utilisateur de poser sa question) ; cette page s’ouvrira dans une nouvelle
fenêtre du navigateur. Il existe deux versions de la page « Nouvelle question », selon que l’on
arrive sur ladite page depuis une application grand public ou depuis une application à accès
restreint (application intra CNRS).
• soit sur la page de saisie du code Unité.
L’équipe projet devra dans tous les cas contacter le BSU.
A noter : la page « Nouvelle question » contiendra elle-même plusieurs liens dont un lien « Nous
contacter » ; l’activation de ce lien entraînera l’affichage d’une pop-up fournissant un certain
RECOMMANDATIONS ERGONOMIQUES APPLICATIONS WEB OU APPLICATIONS « EN LIGNE » – 75
nombre d’informations telles que le numéro de téléphone de l’assistance aux utilisateurs, son mèl,
ses horaires d’ouverture.
Proposer le lien « Demande d’assistance » dès la page d’identification peut sembler surprenant
dans la mesure où l’utilisateur n’est pas encore entré dans l’application mais ce n’est pourtant pas
inutile : l’utilisateur peut en effet rencontrer des difficultés dès la connexion (problème de codes
d’accès, de configuration,…)
• la mention « ce service (ou cette application) a été réalisé(e) par la Direction des systèmes
d’information »
Si l’application est un progiciel, cette mention devra certainement être modifiée pour être
remplacée par la suivante : « Ce service (ou cette application) a été réalisé(e)
par # nom du progiciel # » ou « Ce service (ou cette application) a été
réalisé(e) par la Direction des systèmes d’information en partenariat
avec # nom du progiciel # ».
Exemples





